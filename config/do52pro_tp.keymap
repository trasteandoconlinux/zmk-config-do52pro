#include <zephyr/dt-bindings/input/input-event-codes.h>

#define BASE 0
#define LOWER 1
#define UPPER 2
#define FUNC 3
#define CONF 4
#define MOUSE_KEYS 5
#define MOUSE_TP 6
#define MOUSE_TP_KEYS 7
#define MOUSE_TP_SET 8

#ifdef HAS_UROB

#define HAS_TRI_STATE
#define HAS_NUM_WORD

#endif

#define HAS_MOUSE_KEYS
#define HAS_MOUSE_TP
#define HAS_TRI_STATE

// ZMK includes
// Personal includes

#include "includes/mouse_keys.dtsi"
#include "includes/mouse_tp.dtsi"
#include "includes/mouse_tp_badjeff_input_listener.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp ESCAPE    &kp N1              &kp N2             &kp N3            &kp N4           &kp N5         &kp N6     &kp N7    &kp N8      &kp N9   &kp N0         &kp BSPC
&kp TAB       &kp Q               &kp W              &kp E             &kp R            &kp T          &kp Y      &kp U     &kp I       &kp O    &kp P          &kp BSPC
&kp CAPSLOCK  &kp A               &kp S              &kp D             &kp F            &kp G          &kp H      &kp J     &kp K       &kp L    &kp SEMI       &kp ENTER
&kp LSHFT     &kp Z               &kp X              &kp C             &kp V            &kp B          &kp N      &kp M     &kp COMMA   &kp DOT  &kp FSLH       &kp RSHFT
&kp LCTRL     &kp LEFT_ALT                                             &kp N1            &kp SPACE      &mkp MB1  &mkp MB2                       &kp RIGHT_ALT  &kp RCTRL
              &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW  &kp RIGHT_ARROW             &mkp MB1  &mkp MB2     &mkp MB1  &mkp MB2      &mkp MB1  &mkp MB2 
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE    &kp F1      &kp F2        &kp F3     &kp F4        &kp F5      &kp F6      &kp F7        &kp F8         &kp F9        &kp F10        &kp F11
&kp LA(TAB)  &kp LA(Q)   &kp LA(W)     &kp LA(E)  &kp LA(R)     &kp PIPE    &kp HOME    &kp END       &kp PAGE_DOWN  &kp PAGE_UP   &none          &kp F12
&trans       &none       &kp CARET     &kp EQUAL  &kp PLUS      &kp TILDE   &none       &none         &none          &kp LG(L)     &none          &kp APOS
&kp LSHFT    &none       &kp CARET     &kp EQUAL  &kp PLUS      &kp TILDE   &none       &none         &none          &none         &kp BACKSLASH  &kp PRINTSCREEN
&kp LCTRL    &kp LGUI                             &trans        &trans      &trans      &trans                                     &kp LALT       &kp RGUI
             &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW  &kp RIGHT_ARROW           &kp N5         &kp N6     &kp N7    &kp N8      &kp N9   &kp N0 
            >;
        };

        upper_layer {
            bindings = <
&kp GRAVE  &kp EXCL  &kp AT        &kp HASH  &kp DLLR      &kp PRCNT  &kp CARET  &none           &none           &none             &kp MINUS          &kp EQUAL
&kp TAB    &none     &none         &kp LBRC  &kp RBRC      &kp GRAVE  &none      &none           &kp UP_ARROW    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp INS
&kp LSHFT  &none     &none         &kp LPAR  &kp RPAR      &none      &none      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW   &none              &kp APOS
&kp LSHFT  &none     &none         &kp LPAR  &kp RPAR      &none      &none      &none           &none           &none             &none              &none
&kp LCTRL  &kp LGUI                          &trans        &trans     &trans     &trans                                            &kp LALT           &kp RGUI
           &kp N1              &kp N2             &kp N3            &kp N4           &kp N5         &kp N6     &kp N7    &kp N8      &kp N9   &kp N0 
            >;
        };

        func_layer {
            bindings = <
&kp ESC    &kp F1    &kp F2   &kp F3  &kp F4  &kp F5  &kp F6    &kp F7    &kp F6    &kp F9    &kp F10   &kp DEL
&kp TAB    &kp F11   &kp F12  &none   &none   &none   &mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &mkp MB5  &none
&kp LSHFT  &none     &none    &none   &none   &none   &none     &none     &none     &none     &none     &none
&kp LSHFT  &none     &none    &none   &none   &none   &none     &none     &none     &none     &none     &none
&kp LCTRL  &kp LGUI                   &none   &none   &none     &none                         &kp LALT  &kp RGUI
           &none     &none    &none   &none   &none   &none     &none     &none     &none     &none
            >;
        };

        config_layer {
            bindings = <
&bootloader        &to 0             &to 1  &to 2  &none  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none       &bootloader
&sys_reset              &none             &none  &none  &none  &none  &none         &bt BT_PRV    &bt BT_NXT    &bt BT_DISC   &none       &sys_reset
&none              &none             &none  &none  &none  &none  &none         &none         &none         &none         &none       &none
&none              &none             &none  &none  &none  &none  &none         &none         &none         &none         &none       &none
&ext_power EP_OFF  &ext_power EP_ON                &none  &none  &none         &none                                     &bt BT_CLR  &bt BT_CLR_ALL
                   &none             &none  &none  &none  &none  &none         &none         &none         &none         &none
            >;
        };

        MouseKeys_layer {
            bindings = <
&tog MOUSE_TP_SET  &none  &none  &none  &none  &none  &none      &none      &none  &none  &none      &none
&none              &none  &none  &none  &none  &none  &none      &none      &none  &none  &none      &none
&none              &none  &none  &none  &none  &none  &none      &none      &none  &none  &none      &none
&none              &none  &none  &none  &none  &none  &none      &none      &none  &none  &none      &none
&none              &none                &none  &none  &mkp LCLK  &mkp RCLK                &mkp MCLK  &none
                   &none  &none  &none  &none  &none  &none      &none      &none  &none  &none
            >;
        };

        MouseTP_layer {
            bindings = <
&tog MOUSE_TP_SET  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans     &trans
&trans             &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans     &trans
&trans             &trans  &trans  &trans  &trans  &trans  &trans     &trans     &mo 1   &trans  &trans     &trans
&trans             &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans     &trans
&trans             &trans                  &trans  &trans  &mkp LCLK  &mkp RCLK                  &mkp MCLK  &trans
                   &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
            >;
        };

        MouseTP_Keys_layer {
            bindings = <
&tog MOUSE_TP_SET  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans     &trans
&trans             &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans     &trans
&trans             &trans  &trans  &trans  &trans  &trans  &trans     &trans     &mo 1   &trans  &trans     &trans
&trans             &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans     &trans
&trans             &trans                  &trans  &trans  &mkp LCLK  &mkp RCLK                  &mkp MCLK  &tog MOUSE_TP_KEYS
                   &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
            >;
        };

        MouseTP_Set_layer {
            bindings = <
&tog MOUSE_TP_SET              &trans                         &trans  &trans                  &mms MS_TP_SENSITIVITY_DECR  &mms MS_TP_SENSITIVITY_INCR  &trans     &trans     &trans  &trans  &trans     &trans
&mms MS_RESET                  &trans                         &trans  &trans                  &trans                       &trans                       &trans     &trans     &trans  &trans  &trans     &trans
&trans                         &trans                         &trans  &trans                  &trans                       &trans                       &trans     &trans     &trans  &trans  &trans     &trans
&mms MS_TP_PTS_THRESHOLD_DECR  &mms MS_TP_PTS_THRESHOLD_INCR  &trans  &mms MS_TP_VALUE6_DECR  &mms MS_TP_VALUE6_INCR       &trans                       &trans     &trans     &trans  &trans  &trans     &trans
&trans                         &trans                                                         &trans                       &trans                       &mkp LCLK  &mkp RCLK                  &mkp MCLK  &tog MOUSE_TP_SET
                               &trans                         &trans  &trans                  &trans                       &trans                       &trans     &trans     &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conf {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
